{"version":3,"sources":["asset/svg/microphone.svg","components/Microphone.js","components/Transcript.js","data/keywords.js","components/ResultPizza.js","components/ResultPizzas.js","containers/speechToTextEngine/SpeechToTextEngine.js","components/PrimaryButton.js","components/TextH2.js","components/BodyContent.js","containers/app/App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","title","props","id","enableBackground","height","viewBox","width","ref","ForwardRef","forwardRef","Microphone","clickAction","recordingAudioStatus","recordingIsRunning","microphoneIconOpacity","opacity","className","style","onClick","cx","cy","r","fill","Transcript","streamStatusText","streamAudioStatus","streamAudioData","backgroundColor","keywords","ResultPizza","name","ingridients","price","ingridientList","join","toUpperCase","ResultPizzas","userMessageWordsArray","split","matchedKeywords","forEach","messageWord","matchKeyword","filter","keyword","undefined","push","matchedPizzas","pizza","pizzasJSON","includes","map","SpeechToTextEngine","handleSpeechToMicrophone","a","fetch","response","json","token","stream","WatsonSpeech","SpeechToText","recognizeMicrophone","accessToken","url","keepMicrophone","objectMode","extractResults","format","model","setState","streamAudioObject","handleStartStreamAudio","console","log","state","on","data","alternatives","transcript","final","streamSentenceDetectionComplete","handleStopStreamAudio","stop","sitePage","initiateMicrophone","Component","PrimaryButton","event","disabled","label","TextH2","children","page","bodyPage","bodyPage1","color","bodyPage2","bodyPage3","App","handlePageTitle","handleButtonAction","actionType","action","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.783acfdb.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m241 420.323v61.677h-90v30h210v-30h-90v-61.677c67.33-6.042 122.865-52.795 142.411-114.813l-28.612-9.018c-17.817 56.528-69.577 94.508-128.799 94.508s-110.982-37.98-128.799-94.509l-28.612 9.018c19.525 61.95 75.011 108.765 142.411 114.814z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 361c57.897 0 105-47.103 105-105v-150c0-58.449-47.103-106-105-106s-105 47.551-105 106v150c0 57.897 47.103 105 105 105zm-75-180h45v-30h-45v-30h45v-30h-43.526c6.892-34.746 37.238-61 73.526-61s66.634 26.254 73.526 61h-43.526v30h45v30h-45v30h45v30h-150zm0 60h150v15c0 41.355-33.645 75-75 75s-75-33.645-75-75z\"\n}));\n\nvar SvgMicrophone = function SvgMicrophone(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMicrophone, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/microphone.e4c2ee0a.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { ReactComponent as MicrophoneLogo } from '../asset/svg/microphone.svg';\r\nimport './Microphone.css'\r\n\r\nconst Microphone = (props) => {\r\n\r\n    const { clickAction, recordingAudioStatus } = props\r\n\r\n    let recordingIsRunning = false;\r\n    let microphoneIconOpacity = {};\r\n\r\n    (recordingAudioStatus === 'ready') || (recordingAudioStatus === 'running') ? recordingIsRunning = true : recordingIsRunning = false;\r\n\r\n    (!recordingIsRunning) ? microphoneIconOpacity = { opacity: '0.6' } : microphoneIconOpacity = { opacity: '1' }\r\n\r\n    return (\r\n        <div className=\"container direction-column\">\r\n            <div id=\"microphone-logo-container\" style={microphoneIconOpacity}>\r\n                <MicrophoneLogo id=\"microphone-logo\" onClick={clickAction} style={microphoneIconOpacity} />\r\n            </div>\r\n            {recordingIsRunning &&\r\n                <div className=\"container direction-row recording-state\">\r\n                    <svg height=\"50\" width=\"50\" className=\"blinking\">\r\n                        <circle cx=\"25\" cy=\"25\" r=\"10\" fill=\"#e16162\" />\r\n                    </svg>\r\n                    <p>microfono attivo</p>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Microphone","import React from 'react'\r\n\r\n\r\nconst Transcript = (props) => {\r\n\r\n    const { streamStatusText, streamAudioStatus, streamAudioData } = props;\r\n\r\n    return (\r\n        <div className=\"container-streaming\">\r\n            <p className=\"streamAudioTextDetection\"><span style={{ backgroundColor: '#f9bc60' }}>{streamStatusText}</span></p>\r\n            <p className=\"streamAudioText\">{(streamAudioStatus === 'running') && streamAudioData}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transcript;","export const keywords = ['origano',\r\n    'aglio',\r\n    'basilico',\r\n    'tonno',\r\n    'cipolla',\r\n    'gamberetti',\r\n    'funghi',\r\n    'prosciutto',\r\n    'capperi'\r\n] ","import React from 'react'\r\nimport './ResultPizza.css'\r\n\r\n\r\nconst ResultPizza = (props) => {\r\n\r\n\r\n    const { name, ingridients, price } = props\r\n\r\n    const ingridientList = ingridients.join(', ')\r\n\r\n    return (\r\n        <div className=\"item-pizza\">\r\n            <h3 id=\"pizzaName\">{name.toUpperCase()}</h3>\r\n            <p id=\"pizzaIngridients\">{ingridientList}</p>\r\n            <p id=\"pizzaPrice\">Prezzo: {price}€</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultPizza","import React from 'react'\r\nimport './ResultPizzas.css'\r\nimport { keywords } from '../data/keywords';\r\nimport pizzasJSON from '../data/pizzas.json'\r\nimport ResultPizza from './ResultPizza';\r\n\r\n\r\nconst ResultPizzas = (props) => {\r\n\r\n    const { streamAudioData } = props;\r\n\r\n    //console.log('ResultPizzas: ', streamAudioData)\r\n    //console.log('ResultPizzas: ', keywords)\r\n\r\n    // dal messaggio dell'utente estraggo le keywords corrispondenti\r\n    let userMessageWordsArray = streamAudioData.split(' ')\r\n    let matchedKeywords = []\r\n    userMessageWordsArray.forEach(messageWord => {\r\n        let matchKeyword = keywords.filter(keyword => keyword === messageWord)\r\n        if (matchKeyword[0] !== undefined) matchedKeywords.push(matchKeyword[0])\r\n        return matchedKeywords\r\n    })\r\n\r\n    // per ogni keyword verifico in quale pizza si trovi\r\n    let matchedPizzas = []\r\n    matchedKeywords.forEach(keyword => {\r\n        for (let pizza in pizzasJSON) {\r\n            if (pizzasJSON[pizza].ingridients.includes(keyword)) {\r\n                // se l'array delle pizze contiene già la pizza non la inserisco\r\n                if (!matchedPizzas.includes(pizzasJSON[pizza])) {\r\n                    matchedPizzas.push(pizzasJSON[pizza])\r\n                }\r\n            }\r\n        }\r\n\r\n    })\r\n\r\n\r\n    return (\r\n        <div className=\"container-pizzas\">\r\n            {matchedPizzas.map((pizza, id) => {\r\n                return <ResultPizza name={pizza.name}\r\n                    ingridients={pizza.ingridients}\r\n                    price={pizza.price}\r\n                />\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ResultPizzas\r\n\r\n\r\n/*\r\n    const matchedPizzas2 = [\r\n        {\r\n            name: 'margherita',\r\n            ingridients: ['pomodoro', 'mozzarella'],\r\n            price: 3\r\n        },\r\n        {\r\n            name: 'marinara',\r\n            ingridients: ['pomodoro', 'mozzarella', 'aglio', 'basilico'],\r\n            price: 6.50\r\n        },\r\n        {\r\n            name: 'marinara',\r\n            ingridients: ['pomodoro', 'mozzarella', 'aglio', 'basilico'],\r\n            price: 6.50\r\n        },\r\n        {\r\n            name: 'marinara',\r\n            ingridients: ['pomodoro', 'mozzarella', 'aglio', 'basilico'],\r\n            price: 6.50\r\n        },\r\n        {\r\n            name: 'marinara',\r\n            ingridients: ['pomodoro', 'mozzarella', 'aglio', 'basilico'],\r\n            price: 6.50\r\n        },\r\n        {\r\n            name: 'marinara',\r\n            ingridients: ['pomodoro', 'mozzarella', 'aglio', 'basilico'],\r\n            price: 6.50\r\n        },\r\n        {\r\n            name: 'marinara',\r\n            ingridients: ['pomodoro', 'mozzarella', 'aglio', 'basilico'],\r\n            price: 6.50\r\n        }\r\n    ]\r\n*/","import React, { Component, Fragment } from 'react';\r\nimport WatsonSpeech from 'watson-speech'\r\nimport './SpeechToTextEngine.css'\r\nimport Microphone from '../../components/Microphone';\r\nimport Transcript from '../../components/Transcript';\r\nimport ResultPizzas from '../../components/ResultPizzas';\r\n\r\n\r\n/*\r\nit-IT_BroadbandModel\r\nit-IT_NarrowbandModel\r\npt-BR_BroadbandModel\r\npt-BR_NarrowbandModel\r\nen-GB_BroadbandModel\r\nen-GB_NarrowbandModel\r\nen-US_BroadbandModel\r\nen-US_NarrowbandModel\r\n */\r\n\r\n//https://cloud.ibm.com/apidocs/speech-to-text?code=node#introduction\r\n//https://cloud.ibm.com/docs/speech-to-text\r\n\r\n\r\nclass SpeechToTextEngine extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            streamAudioStatus: 'idle',\r\n            streamAudioObject: {},\r\n            streamAudioData: '',\r\n            streamSentenceDetectionComplete: false\r\n        }\r\n    }\r\n\r\n    handleSpeechToMicrophone = async () => {\r\n\r\n        try {\r\n            const response = await fetch('https://speech-to-order-backend.eu-gb.mybluemix.net/api/speech-to-text/token')\r\n            const token = await response.json()\r\n\r\n            let stream = WatsonSpeech.SpeechToText.recognizeMicrophone({\r\n                accessToken: token.accessToken,\r\n                url: 'https://api.eu-de.speech-to-text.watson.cloud.ibm.com/instances/d86be21b-c272-4038-955f-68908b2ee32d',\r\n                keepMicrophone: true,\r\n                objectMode: true,\r\n                extractResults: true,\r\n                format: false,\r\n                //model: 'pt-BR_BroadbandModel'\r\n                model: 'it-IT_BroadbandModel'\r\n            });\r\n\r\n            this.setState({\r\n                streamAudioStatus: 'ready',\r\n                streamAudioObject: stream\r\n            })\r\n\r\n            this.handleStartStreamAudio()\r\n        } catch (error) {\r\n            console.log('speechToTextEngine - handleSpeechToMicrophone: ', error)\r\n        }\r\n    }\r\n\r\n    handleStartStreamAudio = () => {\r\n        this.state.streamAudioObject.on('data', (data) => {\r\n            console.log(data.alternatives[0].transcript);\r\n            console.log(data.final);\r\n            this.setState({\r\n                streamAudioStatus: 'running',\r\n                streamAudioData: data.alternatives[0].transcript,\r\n                streamSentenceDetectionComplete: data.final\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    handleStopStreamAudio = () => {\r\n        this.state.streamAudioObject.stop()\r\n        this.setState({\r\n            streamAudioStatus: 'stopped'\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { streamAudioStatus, streamAudioData } = this.state;\r\n        const { sitePage } = this.props\r\n\r\n        let streamStatusText = ''\r\n\r\n        switch (streamAudioStatus) {\r\n            case 'idle':\r\n                streamStatusText = ''\r\n                break;\r\n            case 'ready':\r\n                streamStatusText = 'prova a parlare...'\r\n                break;\r\n            case 'running':\r\n                streamStatusText = 'ti sto ascoltando...'\r\n                break;\r\n            default:\r\n                streamStatusText = 'stream audio completo'\r\n                break;\r\n        }\r\n\r\n        let initiateMicrophone = (sitePage === 2) ? true : false\r\n\r\n        return (\r\n            < Fragment >\r\n                {initiateMicrophone &&\r\n                    < Microphone\r\n                        clickAction={this.handleSpeechToMicrophone}\r\n                        recordingAudioStatus={streamAudioStatus}\r\n                    />}\r\n                {(streamAudioStatus === 'ready' || streamAudioStatus === 'running') &&\r\n                    < Transcript\r\n                        streamStatusText={streamStatusText}\r\n                        streamAudioStatus={streamAudioStatus}\r\n                        streamAudioData={streamAudioData}\r\n                    />\r\n                }\r\n\r\n\r\n                <ResultPizzas\r\n                    streamAudioData={streamAudioData}\r\n                />\r\n\r\n            </Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default SpeechToTextEngine;\r\n\r\n// <p>After 30 seconds of continuous silence or non-speech activity (no speech) the application terminates automatically the recording session.</p>\r\n// <button onClick={this.handleSpeechToMicrophone}>listen the Microphone</button>\r\n// <button onClick={this.handleStopStreamAudio}>stop Microphone</button>\r\n\r\n/*\r\n{(streamSentenceDetectionComplete) ?\r\n                    'sto elaborando...' :\r\n                    <ResultPizzas\r\n                        streamAudioData={streamAudioData}\r\n                    />\r\n\r\n                }\r\n*/","import React, { Fragment } from 'react'\r\nimport './PrimaryButton.css'\r\n\r\nconst PrimaryButton = (props) => {\r\n\r\n    const { event, disabled, label } = props\r\n\r\n    console.log(disabled);\r\n\r\n    return (\r\n        <Fragment>\r\n            <button id=\"buttonPrimary\" onClick={event} disabled={disabled}>{label}</button>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default PrimaryButton;","import React from 'react'\r\nimport './TextH2.css'\r\n\r\n\r\nconst TextH2 = (props) => {\r\n\r\n    return <h2 className=\"TextH2\">{props.children}</h2>\r\n}\r\n\r\nexport default TextH2;","import React from 'react'\r\nimport './BodyContent.css'\r\n\r\n\r\nconst TextH2 = (props) => {\r\n\r\n    const { page } = props;\r\n\r\n    let bodyPage = ''\r\n\r\n    const bodyPage1 = <p className=\"BodyContent\">\r\n        Attraverso la tua voce questa applicazione ti {\"\\n\"}\r\n        <span style={{ color: '#f9bc60' }}>suggerirà delle pizze</span> {\"\\n\"}\r\n        in base al condimento che preferisci.\r\n    </p>\r\n\r\n    const bodyPage2 = <p className=\"BodyContent\">Facciamo un test del microfono.<br />Premi il pulsante qui sotto...</p>\r\n\r\n    const bodyPage3 = <p className=\"BodyContent\">\r\n        Prova a dire{\"\\n\"}\r\n        <span style={{ color: '#f9bc60' }}>funghi</span> o {\"\\n\"}\r\n        <span style={{ color: '#f9bc60' }}>basilico</span> o {\"\\n\"}\r\n        <span style={{ color: '#f9bc60' }}>cipolla</span> o {\"\\n\"}\r\n        <span style={{ color: '#f9bc60' }}>gamberetti</span>...{\"\\n\"}\r\n        O qualsiasi altro gusto che interessa...\r\n    </p>\r\n\r\n\r\n    switch (page) {\r\n        case 1:\r\n            bodyPage = bodyPage1\r\n            break;\r\n        case 2:\r\n            bodyPage = bodyPage2\r\n            break;\r\n        case 3:\r\n            bodyPage = bodyPage3\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n\r\n    return bodyPage\r\n}\r\n\r\nexport default TextH2;","import React, { Component } from 'react';\nimport SpeechToTextEngine from '../speechToTextEngine/SpeechToTextEngine';\nimport PrimaryButton from '../../components/PrimaryButton'\nimport './App.css';\nimport TextH2 from '../../components/TextH2';\nimport BodyContent from '../../components/BodyContent'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      page: 1\n    }\n  }\n\n  handlePageTitle = (sitePage) => {\n    switch (sitePage) {\n      case 1:\n        return 'Benvenuto!'\n      case 2:\n        return ''\n      case 3:\n        return 'Proviamo...'\n      default:\n        return ''\n    }\n  }\n\n  handleButtonAction = (actionType) => {\n\n    if (actionType.action === 'goForward') {\n      this.setState({\n        page: this.state.page + 1\n      })\n    }\n\n    if (actionType.action === 'goBack') {\n      this.setState({\n        page: this.state.page - 1\n      })\n    }\n  }\n\n\n\n  render() {\n\n    const { streamAudioStatus, page } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"Header\"></header>\n        <section className=\"Section\">\n          <TextH2>{this.handlePageTitle(page)}</TextH2>\n          <BodyContent page={page} />\n          <SpeechToTextEngine\n            streamAudioStatus={streamAudioStatus}\n            sitePage={page} />\n          <div className=\"container-buttons\">\n            <PrimaryButton\n              event={() => this.handleButtonAction({ action: 'goBack' })}\n              label={\"Indietro\"}\n              disabled={(page !== 1 ? false : true)} />\n            <PrimaryButton\n              event={() => this.handleButtonAction({ action: 'goForward' })}\n              label={\"Avanti\"}\n              disabled={(page !== 3 ? false : true)} />\n\n          </div>\n        </section>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/app/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}